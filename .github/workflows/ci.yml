name: backend-financeiro-ci

on:
  push:
    branches: [main, devel]
  pull_request:
    branches:
      - main
      - devel
    types: [opened, synchronize, reopened]

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: üì¨ Caching
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/dist
          key: ${{ runner.os }}-node-${{ hashFiles('*/package-lock.json') }}-${{ hashFiles('/.{js,jsx,ts,tsx}') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-
      - name: üß∞ Instala bibliotecas e depend√™ncias
        run: npm i

      - name: üîç Verifica estiliza√ß√£o do c√≥digo
        run: npm run check-format

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: üì¨ Caching
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/dist
          key: ${{ runner.os }}-node-${{ hashFiles('*/package-lock.json') }}-${{ hashFiles('/.{js,jsx,ts,tsx}') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-
      - name: üß∞ Instala bibliotecas e depend√™ncias
        run: npm i

      - name: üßπ Verifica eslint
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
      MONGO_INITDB_ROOT_USERNAME: ${{ secrets.MONGO_INITDB_ROOT_USERNAME }}
      MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      PORT: ${{ secrets.PORT }}
      EMAIL: ${{ secrets.EMAIL }}
      SECRET: ${{ secrets.SECRET }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: üì¨ Caching
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/dist
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('/.{js,jsx,ts,tsx}') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-
      - name: üß∞ Instala bibliotecas e depend√™ncias
        run: npm i

      - name: üß™ Roda su√≠te de testes
        run: npm test -- --passWithNoTests

  sonarcloud:
    name: sonarcloud
    needs: [test]
    runs-on: ubuntu-latest
    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
      MONGO_INITDB_ROOT_USERNAME: ${{ secrets.MONGO_INITDB_ROOT_USERNAME }}
      MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      PORT: ${{ secrets.PORT }}
      EMAIL: ${{ secrets.EMAIL }}
      SECRET: ${{ secrets.SECRET }}
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: üì¨ Caching
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/dist
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.{js,jsx,ts,tsx}') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-
      - name: üß∞ Instala bibliotecas e depend√™ncias
        run: npm i

      - name: üìú Relat√≥rio do eslint
        run: npx eslint -f json -o reports/eslint-report.json src || true

      - name: üß™ Testes e cobertura
        run: JEST_SONAR=jest-sonar CI=true npm test -- --coverage --passWithNoTests

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
